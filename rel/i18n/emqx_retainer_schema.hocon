emqx_retainer_schema {

backend.desc:
"""Settings for the database storing the retained messages."""

batch_deliver_limiter.desc:
"""The rate limiter name for retained messages' delivery.
Limiter helps to avoid delivering too many messages to the client at once, which may cause the client to block or crash, or drop messages due to exceeding the size of the message queue.
The names of the available rate limiters are taken from the existing rate limiters under `limiter.batch`.
If this field is empty, limiter is not used."""

batch_deliver_number.desc:
"""The number of retained messages can be delivered per batch."""

batch_read_number.desc:
"""Size of the batch when reading messages from storage. 0 means no limit."""

enable.desc:
"""Enable retainer feature"""

flow_control.desc:
"""Flow control."""

max_payload_size.desc:
"""Maximum retained message size."""

max_retained_messages.desc:
"""Maximum number of retained messages. 0 means no limit."""

mnesia_config_storage_type.desc:
"""Specifies whether the messages are stored in RAM or persisted on disc."""

mnesia_config_type.desc:
"""Backend type."""

msg_clear_interval.desc:
"""Interval for EMQX to scan expired messages and delete them. Never scan if the value is 0."""

msg_expiry_interval.desc:
"""Message retention time. This config is only applicable for messages without the Message Expiry Interval message property.
0 means message will never expire."""

stop_publish_clear_msg.desc:
"""When the retained flag of the `PUBLISH` message is set and Payload is empty,
whether to continue to publish the message.
See:
http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718038"""

delivery_rate.desc:
"""The maximum rate of delivering retained messages"""
}
